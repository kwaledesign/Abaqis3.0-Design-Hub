@charset "UTF-8";
/**
 * Archetype
 * 
 */
/**
 * Base
 */
/*** @export "colorkit" css */
/**
 * Color Pallet
 * 
 * global color settings
 */
/**
 * Import Colorkit
 * 
 */
/**
 * Colorkit
 * 
 */
/**
 * Color Stacks
 *
 * Returns a list of mixed colors at given intervals based on two initial source colors
 * https://github.com/ericam/accoutrement/blob/master/stylesheets/accoutrement/_color.scss
 * 
 * $main: The main color this stack is based on
 * $second: The color to be mixed in at varrying amounts
 * $amounts: Optional list of percentage mix intervals
 */
/**
 * Amounts
 * 
 * used in stack functions to create multiple color variants
 */
/**
 * Color Stack
 * 
 * creates a list (color pallet) of color values based on the following arguments:
 *
 * $main: the color to generate variants from
 * $second: the color to mix with $main to create the variants
 * $amounts: the list of mixture amounts, determines the number of variants
 *
 * Remember: the first value in the stack is the unadjusted color, meaning each 
 * stack includes the color which the stack was derived from. The adjusted colors 
 * in the stack begin at 2.
 */
/**
 * Value Stacks
 *
 * Functions to return a tint/shade/tone stack based on a given color
 * 
 * $color: color to adjust
 * $amounts: optional list of percentage amounts
 */
/**
 * Simple Color Value
 * 
 * Functions to adjust the tint/shade/tone of a single color
 *
 * $color: color to adjust
 * $amount: the percentage amount
 */
/**
 * Gray Scale 
 * 
 * return opapue/alpha gray scale
 */
/**
 * Color-Scheme
 * 
 * mixin to generate harmonious color-scheme variables 
 *
 * $color-relationship: monochromatic, analogous, complementary, split-complementary, triadic, tetradic, quadradic
 * $base-color: the color to initiate the color scheme with
 * $color-angle: the degrees of seperation between colors on the wheel.
 *
 */
/**
 * Color Swatch Generator
 *
 * generates color swatch class names based on a given color list
 * $color-swatches
 *
 * ex:
 * $swatches: color-stack(red, blue, $default-amounts);
 * @include swatch-gen($swatches);
 */
/**
 * Colorkit Color Library
 *
 */
/**
 * Reds
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Red-Oranges
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Oranges
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Yellow-Orange
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Yellows
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Yellow-Greens
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Greens
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Blue-Greens
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Blues
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Blue-Violets
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Violets
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Red-Violets
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Browns
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * grays
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Color Scheme Pallet
 *
 * for experimenting with color in the browser
 * 
 * generates monochromatic, complementary, split-complementary, triadic,
 * analogous, double-complementary, tetradic, and quadradic color-schemes along
 * with (six by default) tints, tones, and shades of each color in your scheme.  
 * These colors are given class names automaticly. 
 *
 * Remember: the first value in the $tint-stack, $tone-stack, and $shade-stack
 * lists is the unadjusted color, meaning each stack includes the color which the
 * stack was derived from. The adjusted colors in the stack begin at 2.
 */
/**
 * Blue-Greens
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Blue-Violets
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Blues
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Browns
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Greens
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * grays
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Oranges
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Red-Oranges
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Red-Violets
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Reds
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Violets
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Yellow-Greens
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Yellow-Orange
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Yellows
 * 
 */
/**
 * Tints
 */
/**
 * Tones
 */
/**
 * Shades
 */
/**
 * Color Scheme
 * 
 * Generate harmonious color scheme based on a single key-color ($base-color)
 *
 * $base-color: any CSS color value or keyword
 * $color-relationship: monochromatic/complementary/spit-complementary/analogous/triadic/tetradic/quadradic
 * $color-angle: (defaults to 30)
 */
/**
 * Black and White
 */
/**
 * Shadow and Highlight
 */
/**
 * Semantic Utilities
 *
 * utility color variables to extend with semantic variable names
 */
/**
 * Text Colors
 */
/**
 * Background Colors
 */
/**
 * Brand Colors
 *
 * prefixed with '$brand-' to avoid proper color names for ease of use and to avoid collision with CSS color keywords
 * ex: $brand-blue: deepskyblue; or: $brand-accent: tint($brand-blue, 12%);
 */
/**
 * ex:
 * $brand-blue:;
 * $brand-primary:;
 * $brand-secondary:;
 * $brand-accent:;
 */
/**
 * UI and State Colors
 *
 */
/**
 * Label Colors
 */
/*** @export "typography-pallet" css */
/**
 * Typography Pallet
 *
 * 1. Text selection highlight color
 * 2. Text selection text color
 */
/**
 * Typography Variables
 * 
 * 1. typography styles and variables are scoped. see comment in modules/core/_typography.scss
 * 2. path to web font or icon font used in font-face mixin
 */
/** 
 * Type Scope Namespace: 
 */
/* 1 */
/**
 * Font Stack Variables
 */
/**
 * Modular Scale
 * 
 * https://github.com/scottkellum/modular-scale
 * http://thesassway.com/projects/modular-scale
 * http://modularscales.com
 *
 * To set multiple $base-size and/or $ratio values use a space separated list. If
 * you use multiple $base-size values, the starting point of the scale will always
 * be the lowest value in this list.
 *
 * golden 1:1.618 (default)
 * double-octave 1:4 
 * major-twelfth 1:3
 * major-eleventh 3:8 
 * major-tenth 2:5
 * octave 1:2
 * major-seventh 8:15
 * minor-seventh 9:16
 * major-sixth
 * minor-sixth 5:8
 * fifth 2:3
 * augfourth 1:âˆš2
 * fourth 3:4
 * major-third 4:5
 * minor-third 5:6
 * major-second 8:9
 * minor-second 15:16
 *
 * 1. Default to $base-font-size 
 */
/* 1 */
/* 1 */
/* 2 */
/**
 * Main Type Scope
 * 
 * Abstracting typographic element variables to allow for easily adding additional type scopes if needed.
 * Add the additional typography scope styles and variables next to the main type scope styles and variables.
 */
/**
 * Headers
 */
/**
 * Header Text
 */
/**
 * Header Sizes
 */
/**
 * Hero Unity
 */
/**
 * Sub Header 
 */
/**
 * Main Body Text
 */
/**
 * Paragraph Lead
 */
/**
 * Meta Text 
 */
/**
 * Footnote
 */
/**
 * Small Element
 */
/**
 * Horizontal Rule
 */
/**
 * Del
 */
/**
 * Ins
 */
/**
 * Mark
 */
/*** @export "settings" css */
/**
 * Archetype Settings 
 *
 */
/**
 * Imports
 *
 * 1. https://github.com/chriseppstein/compass
 * 2. https://github.com/kwaledesign/Archetype-Utilities
 */
/* 1 */
/**
 * Archetype Utilities
 */
/**
 * Helper Utilities
 *
 */
/**
 * Apply capital case to an element (usually a `strong`).
 */
/* line 11, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_helpers.scss */
.caps {
  text-transform: uppercase;
}

/**
 * Text Overflow
 * 
 * Requires inline-block or block for proper styling
 */
/**
 * Drupal Unpublished Node / Comment
 *
 * The word "Unpublished" displayed underneath unpublished nodes and comments.
 * http://drupal.org/project/zen
 */
/**
 * Accessibility
 * 
 */
/**
 * Focus state for keyboard and accessibility
 *
 * https://github.com/jlong/sass-twitter-bootstrap/blob/master/lib/_mixins.scss
 * ex: &:focus { @include tab-focus(); }
 */
/**
 * Image Replacement
 */
/**
 * Hidden
 * 
 * http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
 * same as compass: @include hide-text(); which includes a hide-left argument
 */
/**
 * Invisable
 *
 * Hide from both screenreaders and browsers: h5bp.com/u 
 * http://www.456bereastreet.com/archive/200711/screen_readers_sometimes_ignore_displaynone
 * http://a11yproject.com/posts/how-to-hide-content
 * 
 * also consider adding: aria-hidden="true" attribute
 */
/**
 * Visually Hidden
 * 
 * Hide only visually, but have it available for screenreaders: h5bp.com/v 
 * 
 * $focus-state argument extends the .visuallyhidden class
 * allows the element to be focusable when navigated to via the keyboard: h5bp.com/p 
 */
/**
 * Clearfix
 * 
 */
/**
 * Modern Clearfix
 *
 * no legacy support, but works well for modern browsers and border-box
 * http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 *
 * see compass docs for legacy clearfix options
 */
/**
 * CSS Triangles 
 * 
 */
/**
 * Simple Triangle
 * 
 * .example { @include simple-triangle(5px, #fff, bottom); }
 */
/**
 * Triangles
 * 
 * https://github.com/Snugug/toolkit/blob/master/compass/stylesheets/toolkit/_triangle.scss
 */
/**
 * Units
 * 
 */
/**
 * Percentage 
 * 
 * calculate a percentage based on values independant of Susy
 */
/**
 * Ems
 * 
 * calculate an em value based on values independant of Susy
 */
/**
 * Convert to Ems
 * 
 * convert given value to em units
 */
/**
 * Pseudo Elements
 * 
 * https://github.com/ericam/accoutrement/blob/master/stylesheets/accoutrement/_pseudo-elements.scss
 */
/**
 * Before
 * 
 * Add content before an element
 *
 * @include before($content)
 * $content: The string to add before
 */
/**
 * After
 * 
 * Add content after an element
 * @include after($content)
 * $content: The string to add after
 */
/**
 * Wrap
 * 
 * Wrap content before and after an element
 *
 * @include wrap($content)
 * $content: The strings to add before and after
 */
/**
 * Alignment
 * 
 */
/**
 * Center-align a block level element
 * 
 */
/**
 * Vertical Align of content
 * 
 * http://css-tricks.com/vertically-center-multi-lined-text/
 */
/**
 * Normalize
 *
 * normalize.css v2.1.1 | MIT License | git.io/normalize 
 */
/**
 * HTML5 Display Definitions
 */
/**
 * Page
 *
 */
/**
 * Links
 */
/**
 * Typography
 */
/**
 * Embeded Content
 */
/**
 * Figures 
 */
/**
 * Forms
 */
/**
 * Tables
 *
 */
/**
 * non-Normalize additions
 *
 */
/**
 * Box Model
 *
 * Apply natural box-model to all elements (ie8+ only)
 * http://paulirish.com/2012/box-sizing-border-box-ftw/ 
 */
/**
 * Media
 * 
 * intrinsic ratio, and hifi
 */
/**
 * hidpi
 *
 * media query syntax: http://css-tricks.com/snippets/css/retina-display-media-query/
 *
 * 1. recommended values for $resolution: 1, 1.3, 1.5, 2;
 */
/* 1 */
/**
 * Fluid Ratios
 * 
 * Force an element and its children to hold a fluid ratio
 * http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/
 * https://github.com/ericam/accoutrement/blob/master/stylesheets/accoutrement/_media.scss
 *
 * also see: jquery solution: http://css-tricks.com/NetMag/FluidWidthVideo/Article-FluidWidthVideo.php
 *
 * @include fluid-ratio([$ratio, $width, $children])
 * $ratio:      16/9, 4/3, 3/2
 * $width:      Fluid width
 * $children:   Child elements to keep within the ratio
 *
 * 1. Default fluid ratio
 * 2. Default fluid ratio width
 * 3. Child elements to keep within the ratio
 */
/* 1 */
/* 2 */
/* 3 */
/**
 * Fluid Scaling 
 * 
 * https://github.com/Snugug/toolkit/blob/master/compass/stylesheets/toolkit/_intrinsic-ratio.scss
 */
/**
 * Font-Face
 * 
 * base on:
 * https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_font-face.scss
 */
/**
 * Box Emboss
 * 
 * example:  .box{ @include box-emboss(0.8, 0.05); }
 */
/**
 * Text Emboss (letterpress)
 *
 * makes the text more readable by providing a sharper separation between letters and background
 * example: .letterpress { @include text-emboss(0.7); }
 */
/**
 * CSS Hyphens
 * 
 * word wrapping for skinny boxes:
 * http://trentwalton.com/2011/09/07/css-hyphenation
 *
 * $value: none | manual | auto
 */
/**
 * Link Mixins
 * 
 */
/**
 * fade between default and hover colors
 */
/**
 * List Numbers
 * 
 * replace OL > LI numbers so they can be styled
 */
/**
 * IE
 * 
 */
/**
 * nth-child() support for IE7 and 8
 *
 * https://github.com/Snugug/toolkit/blob/master/compass/stylesheets/toolkit/_children-of-ie.scss
 */
/**
 * Sass List Utilities
 * 
 * https://github.com/ericam/accoutrement/blob/master/stylesheets/accoutrement/_sass-lists.scss
 */
/**
 * Return a list with items in reverse order
 * 
 * reverse($list)
 * $list: The list to reverse.
 */
/**
 * Return a list with all duplicates removed
 * 
 * remove-duplicates($list)
 * $list: The list to clean up
 */
/**
 * Return a list with specific items removed
 * 
 * filter($list, $target)
 * $list: The list to filter
 * $target: An item to be removed from the list
 */
/* 2 */
/**
 * Compass
 * 
 * 1. Enable Compass to use HTML hacks to support IE 6 and 7
 *    Note: Archetype supports IE9+ (IE6-8 are served a linear layout)
 */
/* 1 */
/* 1 */
/* 1 */
/**
 * Normalize Mixin
 *
 * https://github.com/kwaledesign/Archetype/blob/master/stylesheets/archetype/_normalize.scss
 * 
 * comment out any unneeded components
 */
/* call normalize mixin */
/**
 * Corrects `block` display not defined in IE 8/9.    
 */
/* line 16, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block;
}

/**
 * Corrects `inline-block` display not defined in IE 8/9.
 */
/* line 33, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
audio,
canvas,
video {
  display: inline-block;
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 43, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Addresses styling for `hidden` attribute not present in IE 8/9.
 */
/* line 51, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
[hidden] {
  display: none;
}

/**
 * 1. Prevent system color scheme's background color being used in Firefox, IE,
 *    and Opera.
 * 2. Prevent system color scheme's text color being used in Firefox, IE, and
 *    Opera.
 * 3. Set default font family to sans-serif
 * 4. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 73, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
html {
  background: #fff;
  /* 1 */
  color: #000;
  /* 2 */
  font-family: sans-serif;
  /* 3 */
  -ms-text-size-adjust: 100%;
  /* 4 */
  -webkit-text-size-adjust: 100%;
  /* 4 */
}

/**
 * Removes default margin.
 */
/* line 84, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
body {
  margin: 0;
}

/**
 * Addresses `outline` inconsistency between Chrome and other browsers.
 */
/* line 98, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
a:focus {
  outline: thin dotted;
}

/**
 * Improves readability when focused and also mouse hovered in all browsers.
 */
/* line 105, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
a:active,
a:hover {
  outline: 0;
}

/**
 * Addresses `h1` font sizes within `section` and `article` in Firefox 4+, Safari 5, and Chrome.
 */
/* line 120, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9, Safari 5, and Chrome.
 */
/* line 128, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Addresses style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
/* line 135, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
b,
strong {
  font-weight: bold;
}

/**
 * Addresses styling not present in Safari 5 and Chrome.
 */
/* line 143, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
dfn {
  font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */
/* line 150, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
/* line 159, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Corrects font family set oddly in Safari 5 and Chrome.
 */
/* line 167, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace;
  font-size: 1em;
}

/**
 * Improves readability of pre-formatted text in all browsers.
 */
/* line 178, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

/**
 * Sets consistent quote types.
 */
/* line 187, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/**
 * Addresses inconsistent and variable font size in all browsers.
 */
/* line 194, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
small {
  font-size: 80%;
}

/**
 * Prevents `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 201, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* line 209, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
sup {
  top: -0.5em;
}

/* line 213, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
sub {
  bottom: -0.25em;
}

/**
 * Removes border when inside `a` element in IE 8/9.
 */
/* line 227, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
img {
  border: 0;
}

/**
 * Corrects overflow displayed oddly in IE 9.
 */
/* line 234, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
svg:not(:root) {
  overflow: hidden;
}

/**
 * Addresses margin not present in IE 8/9 and Safari 5.
 */
/* line 246, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
figure {
  margin: 0;
}

/**
 * Define consistent border, margin, and padding.
 */
/* line 259, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.62em 0.75em;
}

/**
 * 1. Corrects color not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 269, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Corrects font family not being inherited in all browsers.
 * 2. Corrects font size not being inherited in all browsers.
 * 3. Addresses margins set differently in Firefox 4+, Safari 5, and Chrome
 */
/* line 279, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Addresses Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet.
 */
/* line 291, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent 'text-transform' inheritance for 'button' and 'select'.
 * All lother form control elements do not inherit 'text-transform' values.
 * Correct 'button' style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct 'select' style inheritance in Firefox 4+ and Opera
 */
/* line 302, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls.
 * 2. Corrects inability to style clickable `input` types in iOS.
 * 3. Improves usability and consistency of cursor style between image-type `input` and others.
 */
/* line 312, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
/* line 323, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
button[disabled],
input[disabled] {
  cursor: default;
}

/**
 * 1. Addresses box sizing set to `content-box` in IE 8/9.
 * 2. Removes excess padding in IE 8/9.
 */
/* line 331, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Addresses `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Addresses `box-sizing` set to `border-box` in Safari 5 and Chrome (include `-moz` to future-proof).
 */
/* line 340, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Removes inner padding and search cancel button in Safari 5 and Chrome on OS X.
 */
/* line 350, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Removes inner padding and border in Firefox 4+.
 */
/* line 358, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Removes default vertical scrollbar in IE 8/9.
 * 2. Improves readability and alignment in all browsers.
 */
/* line 368, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/**
 * Remove most spacing between table cells.
 */
/* line 383, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/archetype-utilities-0.1.0/stylesheets/archetype-utilities/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*** @export "vertical-rhythm" css */
/**
 * Compass Vertical Rhythm 
 * 
 * 1. Set this false for px's
 * 2. This is automaticly converted to 100% by compass
 * 3. Establishes a baseline for $base-font-size
 */
/* 2 */
/* 2 */
/* line 106, ../../../../.rvm/gems/ruby-1.9.3-p448/gems/compass-0.13.alpha.12/frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss */
html {
  font-size: 100%;
  line-height: 1.5em;
}

/* 3 */
/*** @export "structure-units" css */
/**
 * Structure Units
 * 
 */
/**
 * Spacers
 */
/*** @export "skin-units" css */
/**
 * Skin Units
 *
 */
/**
 * Radius Unit
 */
/**
 * Objects
 */
/**
 * Components
 */
/*** @export "page" css */
/**
 * Page
 *
 * 1. Sets default font family to $body-font - defined in _settings.scss partial
 * 2. Prevents iOS text size adjust after orientation change, without disabling user zoom.
 * 3. Removes default margin
 * 
 */
/* line 11, ../sass/components/_page.scss */
html {
  font-family: Georgia, Cambria, "Times New Roman", Times, serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  overflow-y: scroll;
  min-height: 100%;
}

/* line 19, ../sass/components/_page.scss */
body {
  color: #4d4d4d;
  background: white;
  font-family: Georgia, Cambria, "Times New Roman", Times, serif;
  font-weight: normal;
  margin: 0;
  /* 3 */
  padding: 0;
  width: 100%;
  min-height: 100%;
}

/**
 * Typography
 * 
 * typography styles are scoped. only 'default' type values are those provided by the normalize reset
 * this is done to avoid repeatidly overridding
 * see: http://css-tricks.com/opt-in-typography/  &  http://anthonyshort.me/2012/05/global-typographic-styles-suck
 */
/**
 * Main Copy Scope 
 */
/* line 13, ../sass/components/_typography.scss */
.copy {
  /**
   * Font-face & Icon Fonts
   */
  /**
   * Headers 
   */
  /*h5bp*/
}
/* line 23, ../sass/components/_typography.scss */
.copy h1, .copy h2, .copy h3, .copy h4, .copy h5, .copy h6 {
  font-weight: bold;
  color: #666666;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  text-rendering: optimizelegibility;
}
/* line 31, ../sass/components/_typography.scss */
.copy h1 {
  font-size: 4.1875em;
  line-height: 1.07463em;
  margin: 0 auto 0.35821em;
}
/* line 36, ../sass/components/_typography.scss */
.copy h2 {
  font-size: 3.1875em;
  line-height: 1.41176em;
  margin: 0 auto 0.47059em;
}
/* line 41, ../sass/components/_typography.scss */
.copy h3 {
  font-size: 2.375em;
  line-height: 1.26316em;
  margin: 0 auto 0.63158em;
}
/* line 46, ../sass/components/_typography.scss */
.copy h4 {
  font-size: 1.75em;
  line-height: 1.71429em;
  margin: 0 auto 0.85714em;
}
/* line 51, ../sass/components/_typography.scss */
.copy h5 {
  font-size: 1.3125em;
  line-height: 2.28571em;
  margin: 0 auto 1.14286em;
}
/* line 56, ../sass/components/_typography.scss */
.copy h6 {
  font-size: 1em;
  line-height: 1.5em;
  margin: 0 auto 1.5em;
}
/* line 61, ../sass/components/_typography.scss */
.copy .subheader {
  color: #999999;
  font-weight: normal;
}
/* line 66, ../sass/components/_typography.scss */
.copy p {
  margin: 0 auto 1.5em;
}
/* line 75, ../sass/components/_typography.scss */
.copy .lead {
  font-size: 1.75em;
  line-height: 1.71429em;
  margin: 0 auto 0.85714em;
  color: #999999;
}
/* line 81, ../sass/components/_typography.scss */
.copy .meta {
  font-size: 0.75em;
  line-height: 1.33333em;
}
/* line 85, ../sass/components/_typography.scss */
.copy .footnote {
  font-size: 0.5625em;
  line-height: 1.77778em;
}
/* line 89, ../sass/components/_typography.scss */
.copy .muted {
  color: #b3b3b3;
}
/* line 93, ../sass/components/_typography.scss */
.copy address {
  display: block;
  margin-bottom: 24px;
  line-height: 24px;
  font-style: normal;
}
/* line 99, ../sass/components/_typography.scss */
.copy del {
  color: #999999;
  text-decoration: line-through;
}
/* line 104, ../sass/components/_typography.scss */
.copy cite {
  font-style: normal;
}
/* line 108, ../sass/components/_typography.scss */
.copy em,
.copy dfn {
  font-style: italic;
}
/* line 113, ../sass/components/_typography.scss */
.copy dfn {
  font-weight: bold;
}
/* line 117, ../sass/components/_typography.scss */
.copy ins {
  background: #ffff99;
  color: black;
  text-decoration: none;
}
/* line 124, ../sass/components/_typography.scss */
.copy mark {
  font-style: italic;
  font-weight: bold;
}

/*** @export "links" css */
/**
 * Links
 *
 * Links are scoped with $main-type-scope which is set in the base/_typography.scss partial
 */
/* line 9, ../sass/components/_links.scss */
.copy a {
  color: blue;
  font-weight: normal;
  text-decoration: none;
}
/* line 13, ../sass/components/_links.scss */
.copy a:visited {
  color: blue;
}
/* line 16, ../sass/components/_links.scss */
.copy a:hover {
  color: blue;
}
/* line 19, ../sass/components/_links.scss */
.copy a:focus {
  color: blue;
}

/*** @export "external-links" css */
/**
 * Identify External Links
 */
/**
 * Code
 *
 * Inline code and code block styles
 * Scoped with $main-type-scope which is set in the base/_typography.scss partial
 */
/**
 * Inline Code
 */
/* line 13, ../sass/components/_code.scss */
.copy code {
  display: inline-block;
  background: #e6e6e6;
  border: 1px solid #cccccc;
  color: #ff3333;
  padding: 0 3px;
  font-family: "Bitstream Vera Sans Mono", Consolas, Courier, monospace, serif;
}

/**
 * Code Blocks
 * 
 * 1. maintain vertical ryhthm after code blocks
 */
/* line 29, ../sass/components/_code.scss */
.copy pre {
  margin: 0 auto 1.5em;
  /* 1 */
  font-family: "Bitstream Vera Sans Mono", Consolas, Courier, monospace, serif;
}

/*** @export "spacers" css */
/**
 * Spacers
 * 
 * Add margins, paddings, and unpaddings using consistient spacing units derived from the 
 * vertical rhythm, the grid, or the modular scale
 */
/**
 * Vertically Separated
 *
 * Adds top and bottom margins to container
 */
/**
 * Vertically Padded
 * 
 * Adds top and bottom padding to container
 */
/**
 * Top margined
 * 
 * Adds top margin to container
 */
/**
 * Top Padded
 * 
 * Adds top padding to container
 */
/**
 * Bottom margined
 * 
 * Adds bottom margin to container
 */
/**
 * Bottom Padded
 * 
 * Adds bottom padding to container
 */
/**
 * Side Spacers
 */
/**
 * Margined Container
 * 
 * Adds standard padding unit as side margins
 */
/**
 * Padded Container
 * 
 * Adds standard padding unit as side padding
 */
/**
 * Extra Padded Container
 * 
 * Adds an extra padding unit as side padding
 */
/**
 * Unpadded container
 * 
 * Allows an container to reach the border of a padded container
 */
/**
 * Extra Unpadded container
 * 
 * Allows an container to reach the border of an extra padded container
 */
/**
 * Typography
 * 
 * typography styles are scoped. only 'default' type values are those provided by the normalize reset
 * this is done to avoid repeatidly overridding
 * see: http://css-tricks.com/opt-in-typography/  &  http://anthonyshort.me/2012/05/global-typographic-styles-suck
 */
/**
 * Main Copy Scope 
 */
/* line 13, ../sass/components/_typography.scss */
.copy {
  /**
   * Font-face & Icon Fonts
   */
  /**
   * Headers 
   */
  /*h5bp*/
}
/* line 23, ../sass/components/_typography.scss */
.copy h1, .copy h2, .copy h3, .copy h4, .copy h5, .copy h6 {
  font-weight: bold;
  color: #666666;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  text-rendering: optimizelegibility;
}
/* line 31, ../sass/components/_typography.scss */
.copy h1 {
  font-size: 4.1875em;
  line-height: 1.07463em;
  margin: 0 auto 0.35821em;
}
/* line 36, ../sass/components/_typography.scss */
.copy h2 {
  font-size: 3.1875em;
  line-height: 1.41176em;
  margin: 0 auto 0.47059em;
}
/* line 41, ../sass/components/_typography.scss */
.copy h3 {
  font-size: 2.375em;
  line-height: 1.26316em;
  margin: 0 auto 0.63158em;
}
/* line 46, ../sass/components/_typography.scss */
.copy h4 {
  font-size: 1.75em;
  line-height: 1.71429em;
  margin: 0 auto 0.85714em;
}
/* line 51, ../sass/components/_typography.scss */
.copy h5 {
  font-size: 1.3125em;
  line-height: 2.28571em;
  margin: 0 auto 1.14286em;
}
/* line 56, ../sass/components/_typography.scss */
.copy h6 {
  font-size: 1em;
  line-height: 1.5em;
  margin: 0 auto 1.5em;
}
/* line 61, ../sass/components/_typography.scss */
.copy .subheader {
  color: #999999;
  font-weight: normal;
}
/* line 66, ../sass/components/_typography.scss */
.copy p {
  margin: 0 auto 1.5em;
}
/* line 75, ../sass/components/_typography.scss */
.copy .lead {
  font-size: 1.75em;
  line-height: 1.71429em;
  margin: 0 auto 0.85714em;
  color: #999999;
}
/* line 81, ../sass/components/_typography.scss */
.copy .meta {
  font-size: 0.75em;
  line-height: 1.33333em;
}
/* line 85, ../sass/components/_typography.scss */
.copy .footnote {
  font-size: 0.5625em;
  line-height: 1.77778em;
}
/* line 89, ../sass/components/_typography.scss */
.copy .muted {
  color: #b3b3b3;
}
/* line 93, ../sass/components/_typography.scss */
.copy address {
  display: block;
  margin-bottom: 24px;
  line-height: 24px;
  font-style: normal;
}
/* line 99, ../sass/components/_typography.scss */
.copy del {
  color: #999999;
  text-decoration: line-through;
}
/* line 104, ../sass/components/_typography.scss */
.copy cite {
  font-style: normal;
}
/* line 108, ../sass/components/_typography.scss */
.copy em,
.copy dfn {
  font-style: italic;
}
/* line 113, ../sass/components/_typography.scss */
.copy dfn {
  font-weight: bold;
}
/* line 117, ../sass/components/_typography.scss */
.copy ins {
  background: #ffff99;
  color: black;
  text-decoration: none;
}
/* line 124, ../sass/components/_typography.scss */
.copy mark {
  font-style: italic;
  font-weight: bold;
}

/**
 * Layout
 * 
 */
/**
 * Temp
 */
/************Reset**************/
/* line 2, ../sass/temp/_temp.scss */
* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* line 7, ../sass/temp/_temp.scss */
html, body, div, object, iframe, fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

/* line 12, ../sass/temp/_temp.scss */
ol, ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/* line 17, ../sass/temp/_temp.scss */
header, footer, nav, section, article, hgroup, figure {
  display: block;
}

/************End Reset**************/
/************Global**************/
/* line 22, ../sass/temp/_temp.scss */
body {
  background: #fff;
  color: #222222;
  font: 120%/1.4 "HelveticaNeue", "Helvetica", "Arial", sans-serif;
  padding: 1em;
  -webkit-text-size-adjust: 100%;
}

@media all and (min-width: 40em) {
  /* line 29, ../sass/temp/_temp.scss */
  body {
    padding-left: 2em;
  }
}
/* line 32, ../sass/temp/_temp.scss */
a {
  color: gray;
  text-decoration: none;
}

/* line 36, ../sass/temp/_temp.scss */
a:hover, a:focus {
  color: #222222;
  text-decoration: underline;
}

/* line 40, ../sass/temp/_temp.scss */
p {
  margin: 0 0 1em;
}

/* line 43, ../sass/temp/_temp.scss */
img, object, video {
  max-width: 100%;
  border: 0;
}

/* line 47, ../sass/temp/_temp.scss */
a img {
  border: 0;
  outline: 0;
}

/* line 51, ../sass/temp/_temp.scss */
h1 {
  font-size: 2em;
  line-height: 1;
  letter-spacing: -0.02em;
  margin-bottom: 0.8em;
}

/* line 57, ../sass/temp/_temp.scss */
h2 {
  text-transform: lowercase;
  font-size: 3em;
  line-height: 1.1;
  margin: 0 0 0.4em;
}

/* line 63, ../sass/temp/_temp.scss */
h3 {
  font-size: 1.8em;
  line-height: 1.1;
  margin: 0 0 0.2em;
  text-transform: lowercase;
}

/************End Global**************/
/************Timeline**************/
/* Timeline Container */
/* line 72, ../sass/temp/_temp.scss */
.timeline {
  border-left: 5px solid #dddddd;
  padding-bottom: 3em;
  position: relative;
}

/* line 76, ../sass/temp/_temp.scss */
.timeline:before {
  content: "";
  position: absolute;
  bottom: 0;
  left: -1.47em;
  width: 40px;
  height: 40px;
  border-radius: 40px;
  background: #dddddd;
  border: 5px solid #dddddd;
}

/* Individual Timeline Item */
/* line 88, ../sass/temp/_temp.scss */
.tl-node {
  padding-left: 1em;
  margin-bottom: 3em;
  position: relative;
}

/* line 92, ../sass/temp/_temp.scss */
.tl-node a {
  display: block;
}

/* line 94, ../sass/temp/_temp.scss */
.tl-node:before {
  content: "";
  position: absolute;
  top: 0;
  left: -0.95em;
  width: 20px;
  height: 20px;
  border-radius: 20px;
  background: #fff;
  border: 5px solid #dddddd;
}

/* line 104, ../sass/temp/_temp.scss */
.tl-content a {
  color: #222222;
}

/* Timestamp */
/* line 108, ../sass/temp/_temp.scss */
.tl-stamp {
  font-size: 0.7em;
  color: gray;
}

/************End Timeline**************/
/**
 * lightbox2 css
 *
 */
/* line 7, ../sass/lightbox.sass */
/* line 121, ../sass/temp/_temp.scss */
body:after {
  content: url(../images/close.png) url(../images/loading.gif) url(../images/prev.png) url(../images/next.png);
  display: none;
}

/* line 11, ../sass/lightbox.sass */
/* line 127, ../sass/temp/_temp.scss */
.lightboxOverlay {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 9999;
  background-color: black;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=80);
  opacity: 0.8;
  display: none;
}

/* line 20, ../sass/lightbox.sass */
/* line 139, ../sass/temp/_temp.scss */
.lightbox {
  position: absolute;
  left: 0;
  width: 100%;
  z-index: 10000;
  text-align: center;
  line-height: 0;
  font-weight: normal;
}

/* line 28, ../sass/lightbox.sass */
/* line 149, ../sass/temp/_temp.scss */
.lightbox .lb-image {
  display: block;
  height: auto;
  max-width: inherit;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  -ms-border-radius: 3px;
  -o-border-radius: 3px;
  border-radius: 3px;
}

/* line 33, ../sass/lightbox.sass */
/* line 160, ../sass/temp/_temp.scss */
.lightbox a img {
  border: none;
}

/* line 36, ../sass/lightbox.sass */
/* line 165, ../sass/temp/_temp.scss */
.lb-outerContainer {
  position: relative;
  background-color: white;
  *zoom: 1;
  width: 250px;
  height: 250px;
  margin: 0 auto;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  -ms-border-radius: 4px;
  -o-border-radius: 4px;
  border-radius: 4px;
}

/* line 38, ../../../../.rvm/gems/ruby-1.9.3-p392/gems/compass-0.12.2/frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss */
/* line 179, ../sass/temp/_temp.scss */
.lb-outerContainer:after {
  content: "";
  display: table;
  clear: both;
}

/* line 45, ../sass/lightbox.sass */
/* line 186, ../sass/temp/_temp.scss */
.lb-container {
  padding: 4px;
}

/* line 48, ../sass/lightbox.sass */
/* line 191, ../sass/temp/_temp.scss */
.lb-loader {
  position: absolute;
  top: 43%;
  left: 0%;
  height: 25%;
  width: 100%;
  text-align: center;
  line-height: 0;
}

/* line 57, ../sass/lightbox.sass */
/* line 202, ../sass/temp/_temp.scss */
.lb-cancel {
  display: block;
  width: 32px;
  height: 32px;
  margin: 0 auto;
  background: url(../images/loading.gif) no-repeat;
}

/* line 64, ../sass/lightbox.sass */
/* line 211, ../sass/temp/_temp.scss */
.lb-nav {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 10;
}

/* line 72, ../sass/lightbox.sass */
/* line 221, ../sass/temp/_temp.scss */
.lb-container > .nav {
  left: 0;
}

/* line 75, ../sass/lightbox.sass */
/* line 226, ../sass/temp/_temp.scss */
.lb-nav a {
  outline: none;
}

/* line 78, ../sass/lightbox.sass */
/* line 231, ../sass/temp/_temp.scss */
.lb-prev, .lb-next {
  width: 49%;
  height: 100%;
  cursor: pointer;
  /* Trick IE into showing hover */
  display: block;
}

/* line 85, ../sass/lightbox.sass */
/* line 240, ../sass/temp/_temp.scss */
.lb-prev {
  left: 0;
  float: left;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  -webkit-transition: opacity 0.6s;
  -moz-transition: opacity 0.6s;
  -o-transition: opacity 0.6s;
  transition: opacity 0.6s;
}

/* line 90, ../sass/lightbox.sass */
/* line 251, ../sass/temp/_temp.scss */
.lb-prev:hover {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1;
  background: url(../images/prev.png) left 48% no-repeat;
}

/* line 94, ../sass/lightbox.sass */
/* line 258, ../sass/temp/_temp.scss */
.lb-next {
  right: 0;
  float: right;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  -webkit-transition: opacity 0.6s;
  -moz-transition: opacity 0.6s;
  -o-transition: opacity 0.6s;
  transition: opacity 0.6s;
}

/* line 99, ../sass/lightbox.sass */
/* line 269, ../sass/temp/_temp.scss */
.lb-next:hover {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1;
  background: url(../images/next.png) right 48% no-repeat;
}

/* line 103, ../sass/lightbox.sass */
/* line 276, ../sass/temp/_temp.scss */
.lb-dataContainer {
  margin: 0 auto;
  padding-top: 5px;
  *zoom: 1;
  width: 100%;
  -moz-border-radius-bottomleft: 4px;
  -webkit-border-bottom-left-radius: 4px;
  border-bottom-left-radius: 4px;
  -moz-border-radius-bottomright: 4px;
  -webkit-border-bottom-right-radius: 4px;
  border-bottom-right-radius: 4px;
}

/* line 38, ../../../../.rvm/gems/ruby-1.9.3-p392/gems/compass-0.12.2/frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss */
/* line 289, ../sass/temp/_temp.scss */
.lb-dataContainer:after {
  content: "";
  display: table;
  clear: both;
}

/* line 110, ../sass/lightbox.sass */
/* line 296, ../sass/temp/_temp.scss */
.lb-data {
  padding: 0 4px;
  color: #bbbbbb;
}

/* line 113, ../sass/lightbox.sass */
/* line 301, ../sass/temp/_temp.scss */
.lb-data .lb-details {
  width: 85%;
  float: left;
  text-align: left;
  line-height: 1.1em;
}

/* line 118, ../sass/lightbox.sass */
/* line 308, ../sass/temp/_temp.scss */
.lb-data .lb-caption {
  font-size: 13px;
  font-weight: bold;
  line-height: 1em;
}

/* line 122, ../sass/lightbox.sass */
/* line 314, ../sass/temp/_temp.scss */
.lb-data .lb-number {
  display: block;
  clear: left;
  padding-bottom: 1em;
  font-size: 12px;
  color: #999999;
}

/* line 128, ../sass/lightbox.sass */
/* line 322, ../sass/temp/_temp.scss */
.lb-data .lb-close {
  display: block;
  float: right;
  width: 30px;
  height: 30px;
  background: url(../images/close.png) top right no-repeat;
  text-align: right;
  outline: none;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=70);
  opacity: 0.7;
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  transition: opacity 0.2s;
}

/* line 138, ../sass/lightbox.sass */
/* line 338, ../sass/temp/_temp.scss */
.lb-data .lb-close:hover {
  cursor: pointer;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
  opacity: 1;
}
